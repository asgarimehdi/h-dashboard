# ---------- stage: composer dependencies ----------
FROM composer:2 AS vendor
WORKDIR /app

COPY composer.json composer.lock /app/
RUN composer install --no-dev --prefer-dist --no-interaction --optimize-autoloader --classmap-authoritative

# ---------- stage: node build (vite assets) ----------
FROM node:18-alpine AS node-builder
WORKDIR /app

COPY package.json package-lock.json* yarn.lock* /app/
RUN npm ci --prefer-offline --no-audit --progress=false

COPY . /app
RUN npm run build

# ---------- stage: production php-fpm ----------
FROM php:8.2-fpm AS production

RUN apt-get update \
  && apt-get install -y --no-install-recommends \
     git \
     zip \
     unzip \
     libzip-dev \
     libpng-dev \
     libjpeg-dev \
     libfreetype6-dev \
     libwebp-dev \
     libonig-dev \
     libxml2-dev \
     libicu-dev \
     pkg-config \
  && rm -rf /var/lib/apt/lists/*

RUN docker-php-ext-configure gd --with-freetype --with-jpeg --with-webp \
  && docker-php-ext-install -j$(nproc) pdo_mysql mbstring exif pcntl bcmath gd zip intl opcache sockets

# opcache تنظیمات
RUN { \
    echo "opcache.enable=1"; \
    echo "opcache.memory_consumption=256"; \
    echo "opcache.interned_strings_buffer=16"; \
    echo "opcache.max_accelerated_files=10000"; \
    echo "opcache.revalidate_freq=2"; \
    echo "opcache.validate_timestamps=1"; \
  } > /usr/local/etc/php/conf.d/opcache-recommended.ini

WORKDIR /var/www/html

# کپی سورس
COPY . /var/www/html

# vendor از stage composer
COPY --from=vendor /app/vendor /var/www/html/vendor
COPY --from=vendor /app/composer.lock /var/www/html/composer.lock
COPY --from=vendor /app/composer.json /var/www/html/composer.json

# assets از stage node-builder
COPY --from=node-builder /app/public/build /var/www/html/public/build

RUN chown -R www-data:www-data /var/www/html \
  && find /var/www/html -type f -exec chmod 644 {} \; \
  && find /var/www/html -type d -exec chmod 755 {} \;

USER www-data

EXPOSE 9000
